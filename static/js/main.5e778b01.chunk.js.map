{"version":3,"sources":["styles/education.module.css","styles/inputs.module.css","styles/Header.module.css","styles/personal.module.css","styles/main.module.css","styles/ppreview.module.css","styles/Footer.module.css","styles/app.module.css","components/Header.js","components/Inputs.js","components/Personal.js","components/Education.js","components/Experience.js","components/PersonalPreview.js","assets/icon.jpg","components/EduPreview.js","components/ExpPreview.js","components/Main.js","components/Footer.js","App.js","index.js"],"names":["module","exports","Header","className","headerStyles","header","firstHeader","secondHeader","scroll","Inputs","hfor","kind","name","type","req","acc","imgChange","imgsrc","invalid","displayinvalid","pattern","errormessage","value","minlength","max","min","datakey","input","maindiv","box","htmlFor","label","pstyle","src","alt","width","height","id","select","selectstyle","onChange","disabled","required","textstyle","minLength","spellCheck","accept","inputstyle","photo","e","icon","faCheckCircle","faTimesCircle","defaultProps","format","Date","getFullYear","getMonth","getDate","Personal","props","state","valid","title","firstName","lastName","number","mail","address","errmessage","handleInvalidate","bind","validator","showError","change","this","newObj","target","validity","setState","event","goal","obj","inputError","valueMissing","typeMismatch","tooShort","length","tooLong","maxLength","rangeUnderflow","rangeOverflow","patternMismatch","values","submit","handleImg","personal","formstyle","onSubmit","React","Component","Education","Degree","newEducation","expDelete","education","grid","donebutton","deletebutton","onClick","addbutton","Experience","Position","newExperience","experience","PersonalPreview","editMode","keys","Object","map","key","info","w","newWord","split","toUpperCase","join","capitalize","display","EduPreview","deleteMode","addMode","ExpPreview","Main","Icon","uniqid","personalPreview","eduValues","expValues","handleChange","handleSubmit","edit","eduDisplay","eduChange","addEdu","eduSubmit","eduDelete","eduEdit","expDisplay","expChange","addExp","expSubmit","expEdit","URL","createObjectURL","files","i","preventDefault","index","newarr","parseInt","getAttribute","push","splice","main","mainstyle","Footer","footerStyle","footer","href","rel","App","app","form","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5e778b01.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid\":\"education_grid__3qvEo\",\"donebutton\":\"education_donebutton__i8uos\",\"addbutton\":\"education_addbutton__2BkHL\",\"deletebutton\":\"education_deletebutton__4Z4Le\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"maindiv\":\"inputs_maindiv__39mZq\",\"label\":\"inputs_label__1fQlw\",\"pstyle\":\"inputs_pstyle__1jRu6\",\"box\":\"inputs_box__3RLz3\",\"inputstyle\":\"inputs_inputstyle__2N3dl\",\"textstyle\":\"inputs_textstyle__-Tn5O\",\"selectstyle\":\"inputs_selectstyle__PHbua\",\"select\":\"inputs_select__1Zvax\",\"photo\":\"inputs_photo__wr7jR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1fnJb\",\"scroll\":\"Header_scroll__1J5oQ\",\"firstHeader\":\"Header_firstHeader__10a33\",\"secondHeader\":\"Header_secondHeader__8v0Ms\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formstyle\":\"personal_formstyle__1QXhj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainstyle\":\"main_mainstyle__2mull\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid\":\"ppreview_grid__1L3W_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__2EUkO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"app_form__3yI1Y\"};","import React from \"react\";\nimport \"@fortawesome/fontawesome-free/js/all\";\nimport headerStyles from \"../styles/Header.module.css\";\n\n/**\n * @module Header\n */\n\n/**\n * Header component\n * @return {JSX}\n */\nconst Header = () => (\n  <header className={headerStyles.header}>\n    <div>\n      <h1 className={headerStyles.firstHeader}>CV-App</h1>\n      <h2 className={headerStyles.secondHeader}>Create your Resume</h2>\n    </div>\n    <div className={headerStyles.scroll}>\n      <i className=\"fas fa-scroll\" />\n    </div>\n  </header>\n);\n\nexport default Header;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faTimesCircle,\n  faCheckCircle,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { format } from \"date-fns\";\nimport input from \"../styles/inputs.module.css\";\n\n/**\n * @module Inputs\n */\n\n/**\n * Inputs component\n * @param {Object} param0 - Props\n * @param {String} param0.hfor - Input name and id\n * @param {String} param0.kind - Input type attribute(text, date, tel)\n * @param {String} param0.name - Display name\n * @param {String} param0.type - Input type(input, select, textarea)\n * @param {Boolean} param0.req - Required\n * @param {String} param0.acc - Image input accept attribute\n * @param {Function} param0.imgChange - Function called on image change\n * @param {String} param0.imgsrc -Image src attribute\n * @param {Function} param0.invalid - Form validation function\n * @param {String | Boolean} param0.displayinvalid - error message display control\n * @param {String} param0.pattern - Input pattern attribute\n * @param {String | Boolean} param0.errormessage - Error message\n * @param {String} param0.value - Input value attribute\n * @param {Number} param0.minLength - Input minlength attribute\n * @param {String} param0.max - Input max attribute\n * @param {String} param0.min - Input min attribute\n * @param {Number} param0.datakey - Input data-key attribute\n * @return {JSX}\n */\nconst Inputs = ({\n  hfor,\n  kind,\n  name,\n  type,\n  req,\n  acc,\n  imgChange,\n  imgsrc,\n  invalid,\n  displayinvalid,\n  pattern,\n  errormessage,\n  value,\n  minlength,\n  max,\n  min,\n  datakey,\n}) => {\n  const display = () => {\n    if (type === \"select\") {\n      return (\n        <div className={input.select}>\n          <select\n            id={hfor}\n            className={input.selectstyle}\n            onChange={invalid}\n            name={hfor}\n            value={value}\n          >\n            <option disabled value=\"Default\">\n              Title\n            </option>\n            <option value=\"Mr.\">Mr.</option>\n            <option value=\"Mrs.\">Mrs.</option>\n            <option value=\"Miss\">Miss</option>\n          </select>\n        </div>\n      );\n    }\n    if (type === \"textarea\") {\n      return (\n        <textarea\n          id={hfor}\n          name={hfor}\n          required={req}\n          className={input.textstyle}\n          onChange={invalid}\n          value={value}\n          minLength={minlength}\n          spellCheck=\"false\"\n        />\n      );\n    }\n    return (\n      <input\n        type={kind}\n        id={hfor}\n        name={hfor}\n        required={req}\n        accept={acc !== \"\" ? acc : null}\n        className={`${input.inputstyle} ${\n          hfor === \"photo\" ? input.photo : null\n        }`}\n        onChange={\n          hfor === \"photo\"\n            ? (e) => {\n                imgChange(e);\n                invalid(e);\n              }\n            : invalid\n        }\n        pattern={pattern}\n        value={value}\n        max={kind === \"date\" ? max : null}\n        min={hfor === \"End Date\" ? min : null}\n        data-key={datakey}\n      />\n    );\n  };\n\n  const img = () => {\n    if (hfor === \"photo\") {\n      return (\n        <img src={imgsrc} alt=\"\" width=\"80rem\" height=\"80rem\" id=\"output\" />\n      );\n    }\n    return null;\n  };\n\n  const errordisplay = () => {\n    if (hfor === \"photo\" || displayinvalid === \"null\") {\n      return null;\n    }\n    if (!displayinvalid) {\n      return \"diverror\";\n    }\n    return \"divgood\";\n  };\n\n  const err = () => {\n    if (hfor === \"photo\") {\n      return null;\n    }\n    if (errormessage !== \"null\") {\n      return (\n        <span\n          className={`error ${displayinvalid === false ? \"bad\" : \"good\"}`}\n          id={`${hfor}error`}\n        >\n          {errormessage}\n        </span>\n      );\n    }\n    return null;\n  };\n\n  const icon = () => {\n    if (hfor === \"photo\" || displayinvalid === \"null\") {\n      return null;\n    }\n    return !displayinvalid ? (\n      <FontAwesomeIcon icon={faTimesCircle} />\n    ) : (\n      <FontAwesomeIcon icon={faCheckCircle} />\n    );\n  };\n\n  return (\n    <div className={`${hfor}class`}>\n      <div className={`${errordisplay()}`}>\n        <div\n          className={`${input.maindiv} ${hfor === \"photo\" ? null : input.box}`}\n        >\n          <label htmlFor={hfor} className={input.label}>\n            <p className={input.pstyle}>{name}</p>\n            {img()}\n            {display()}\n          </label>\n          <div className={`error ${!displayinvalid ? \"bad\" : \"good\"}`}>\n            {icon()}\n          </div>\n        </div>\n      </div>\n      <div>{err()}</div>\n    </div>\n  );\n};\n\n/**\n * @type {Object}\n */\nInputs.defaultProps = {\n  name: \"\",\n  type: \"input\",\n  kind: \"text\",\n  req: false,\n  acc: \"\",\n  imgsrc: null,\n  imgChange: null,\n  pattern: null,\n  errormessage: null,\n  minlength: 0,\n  max: `${format(\n    new Date(\n      new Date().getFullYear(),\n      new Date().getMonth(),\n      new Date().getDate()\n    ),\n    \"yyyy-MM-dd\"\n  )}`,\n  min: \"\",\n};\n\n/**\n * @type {Object}\n */\nInputs.propTypes = {\n  hfor: PropTypes.string.isRequired,\n  kind: PropTypes.string,\n  name: PropTypes.string,\n  type: PropTypes.string,\n  req: PropTypes.bool,\n  acc: PropTypes.string,\n  imgChange: PropTypes.func,\n  imgsrc: PropTypes.string,\n  invalid: PropTypes.func.isRequired,\n  displayinvalid: PropTypes.oneOfType([PropTypes.string, PropTypes.bool])\n    .isRequired,\n  pattern: PropTypes.string,\n  errormessage: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]),\n  value: PropTypes.string.isRequired,\n  minlength: PropTypes.number,\n  max: PropTypes.string,\n  min: PropTypes.string,\n  datakey: PropTypes.number.isRequired,\n};\n\nexport default Inputs;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Inputs from \"./Inputs\";\nimport personal from \"../styles/personal.module.css\";\nimport \"@fortawesome/fontawesome-free/js/all\";\n\n/**\n * @module Personal\n */\n\n/**\n * Personal component\n */\nclass Personal extends React.Component {\n  /**\n   * @param {Object} props\n   */\n  constructor(props) {\n    super(props);\n    this.state = {\n      valid: {\n        photo: \"null\",\n        title: \"null\",\n        firstName: \"null\",\n        lastName: \"null\",\n        number: \"null\",\n        mail: \"null\",\n        address: \"null\",\n      },\n      errmessage: {\n        photo: \"null\",\n        title: \"null\",\n        firstName: \"null\",\n        lastName: \"null\",\n        number: \"null\",\n        mail: \"null\",\n        address: \"null\",\n      },\n    };\n    this.handleInvalidate = this.handleInvalidate.bind(this);\n    this.validator = this.validator.bind(this);\n    this.showError = this.showError.bind(this);\n  }\n\n  /**\n   * Form Validation\n   * @param {Object} e\n   */\n  handleInvalidate(e) {\n    const { change } = this.props;\n    change(e);\n    this.validator(e);\n    const { valid } = this.state;\n    const newObj = { ...valid };\n    if (!e.target.validity.valid) {\n      newObj[e.target.id] = false;\n    } else newObj[e.target.id] = true;\n    this.setState({ valid: newObj });\n  }\n\n  /**\n   * Form Validation\n   * @param {Object} event\n   */\n  validator(event) {\n    const goal = event.target.id;\n    const { valid } = this.state;\n    const newObj = { ...valid };\n    if (event.target.validity.valid) {\n      newObj[goal] = \"Input is valid!\";\n      this.setState({\n        errmessage: newObj,\n      });\n    } else this.showError(event.target, valid, goal);\n  }\n\n  /**\n   * shows errors\n   * @param {Object} input\n   * @param {Object} obj - Invalid state\n   * @param {string} goal - Input id\n   */\n  showError(input, obj, goal) {\n    const inputError = { ...obj };\n    if (input.validity.valueMissing) {\n      inputError[goal] = \"Input must not be left blank!\";\n    } else if (input.validity.typeMismatch) {\n      inputError[goal] = `Entered value must be a valid ${input.type}.`;\n    } else if (input.validity.tooShort) {\n      inputError[\n        goal\n      ] = `Input should be at least ${input.minLength} characters; you entered ${input.value.length}.`;\n    } else if (input.validity.tooLong) {\n      inputError[\n        goal\n      ] = `Input should be at most ${input.maxLength} characters; you entered ${input.value.length}.`;\n    } else if (input.validity.rangeUnderflow) {\n      inputError[\n        goal\n      ] = `Input should be at least ${input.min}; you entered ${input.value}`;\n    } else if (input.validity.rangeOverflow) {\n      inputError[\n        goal\n      ] = `Input should be at most ${input.max}; you entered ${input.value}`;\n    } else if (input.validity.patternMismatch) {\n      inputError[goal] = `Input must be in the form 123-4567-8910`;\n    }\n    this.setState({\n      errmessage: inputError,\n    });\n  }\n\n  render() {\n    const { valid, errmessage } = this.state;\n    const { values, submit, imgsrc, handleImg } = this.props;\n    return (\n      <form className={personal.formstyle} onSubmit={submit}>\n        <Inputs\n          hfor=\"photo\"\n          kind=\"file\"\n          acc=\"image/*\"\n          imgChange={handleImg}\n          imgsrc={imgsrc[0]}\n          invalid={this.handleInvalidate}\n          displayinvalid={valid.photo}\n          errormessage={errmessage.photo}\n          value={values.photo[0]}\n        />\n        <Inputs\n          hfor=\"title\"\n          name=\"\"\n          type=\"select\"\n          invalid={this.handleInvalidate}\n          displayinvalid={valid.title}\n          errormessage={errmessage.title}\n          value={values.title[0]}\n        />\n        <Inputs\n          hfor=\"firstName\"\n          kind=\"text\"\n          name=\"First Name*\"\n          req\n          invalid={this.handleInvalidate}\n          displayinvalid={valid.firstName}\n          errormessage={errmessage.firstName}\n          value={values.firstName[0]}\n        />\n        <Inputs\n          hfor=\"lastName\"\n          kind=\"text\"\n          name=\"Last Name*\"\n          req\n          invalid={this.handleInvalidate}\n          displayinvalid={valid.lastName}\n          errormessage={errmessage.lastName}\n          value={values.lastName[0]}\n        />\n        <Inputs\n          hfor=\"mail\"\n          kind=\"email\"\n          name=\"Email*\"\n          req\n          invalid={this.handleInvalidate}\n          displayinvalid={valid.mail}\n          errormessage={errmessage.mail}\n          value={values.mail[0]}\n        />\n        <Inputs\n          hfor=\"number\"\n          kind=\"tel\"\n          name=\"Phone Number*\"\n          req\n          pattern=\"[0-9]{3}-[0-9]{4}-[0-9]{4}\"\n          invalid={this.handleInvalidate}\n          displayinvalid={valid.number}\n          errormessage={errmessage.number}\n          value={values.number[0]}\n        />\n        <Inputs\n          hfor=\"address\"\n          type=\"textarea\"\n          name=\"Home Address*\"\n          req\n          minlength={10}\n          invalid={this.handleInvalidate}\n          displayinvalid={valid.address}\n          errormessage={errmessage.address}\n          value={values.address[0]}\n        />\n        <button type=\"submit\" className=\"donebutton\">\n          Done\n          <i className=\"fas fa-paper-plane\" />\n        </button>\n      </form>\n    );\n  }\n}\n\n/**\n * @type {Object}\n */\nPersonal.propTypes = {\n  change: PropTypes.func.isRequired,\n  submit: PropTypes.func.isRequired,\n  values: PropTypes.shape({\n    photo: PropTypes.string,\n    title: PropTypes.string,\n    firstName: PropTypes.string,\n    lastName: PropTypes.string,\n    mail: PropTypes.string,\n    number: PropTypes.string,\n    address: PropTypes.string,\n  }).isRequired,\n  imgsrc: PropTypes.string.isRequired,\n  handleImg: PropTypes.func.isRequired,\n};\n\nexport default Personal;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Inputs from \"./Inputs\";\nimport education from \"../styles/education.module.css\";\nimport \"@fortawesome/fontawesome-free/js/all\";\n\n/**\n * @module Education\n */\n\n/**\n * Personal component\n */\nclass Education extends React.Component {\n  /**\n   * @param {Object} props\n   */\n  constructor(props) {\n    super(props);\n    this.state = {\n      valid: {\n        \"School Name\": \"null\",\n        Degree: \"null\",\n        \"Start Date\": \"null\",\n        \"End Date\": \"null\",\n      },\n      errmessage: {\n        \"School Name\": \"null\",\n        Degree: \"null\",\n        \"Start Date\": \"null\",\n        \"End Date\": \"null\",\n      },\n    };\n\n    this.handleInvalidate = this.handleInvalidate.bind(this);\n    this.validator = this.validator.bind(this);\n    this.showError = this.showError.bind(this);\n  }\n\n  /**\n   * Form Validation\n   * @param {Object} e\n   */\n  handleInvalidate(e) {\n    const { change } = this.props;\n    change(e);\n    this.validator(e);\n    const { valid } = this.state;\n    const newObj = { ...valid };\n    if (!e.target.validity.valid) {\n      newObj[e.target.id] = false;\n    } else newObj[e.target.id] = true;\n    this.setState({ valid: newObj });\n  }\n\n  /**\n   * Form Validation\n   * @param {Object} e\n   */\n  validator(event) {\n    const goal = event.target.id;\n    const { valid } = this.state;\n    const newObj = { ...valid };\n    if (event.target.validity.valid) {\n      newObj[goal] = \"Input is valid!\";\n      this.setState({\n        errmessage: newObj,\n      });\n    } else this.showError(event.target, valid, goal);\n  }\n\n  /**\n   * shows errors\n   * @param {Object} input\n   * @param {Object} obj - Invalid state\n   * @param {string} goal - Input id\n   */\n  showError(input, obj, goal) {\n    const inputError = { ...obj };\n    if (input.validity.valueMissing) {\n      inputError[goal] = \"Input must not be left blank!\";\n    } else if (input.validity.typeMismatch) {\n      inputError[goal] = `Entered value must be a valid ${input.type}.`;\n    } else if (input.validity.tooShort) {\n      inputError[\n        goal\n      ] = `Input should be at least ${input.minLength} characters; you entered ${input.value.length}.`;\n    } else if (input.validity.tooLong) {\n      inputError[\n        goal\n      ] = `Input should be at most ${input.maxLength} characters; you entered ${input.value.length}.`;\n    } else if (input.validity.rangeUnderflow) {\n      inputError[\n        goal\n      ] = `Input should be at least ${input.min}; you entered ${input.value}`;\n    } else if (input.validity.rangeOverflow) {\n      inputError[\n        goal\n      ] = `Input should be at most ${input.max}; you entered ${input.value}`;\n    } else if (input.validity.patternMismatch) {\n      inputError[goal] = `Input must be in the form 123-4567-8910`;\n    }\n    this.setState({\n      errmessage: inputError,\n    });\n  }\n\n  render() {\n    const { valid, errmessage } = this.state;\n    const { datakey, values, newEducation, submit, expDelete } = this.props;\n    return (\n      <form className={education.grid} data-key={datakey} onSubmit={submit}>\n        <Inputs\n          hfor=\"School Name\"\n          kind=\"text\"\n          name=\"School Name\"\n          invalid={this.handleInvalidate}\n          displayinvalid={valid[\"School Name\"]}\n          errormessage={errmessage[\"School Name\"]}\n          datakey={datakey}\n          value={values[\"School Name\"][0]}\n          req\n        />\n        <Inputs\n          hfor=\"Degree\"\n          kind=\"text\"\n          name=\"Qualification awarded\"\n          invalid={this.handleInvalidate}\n          displayinvalid={valid.Degree}\n          errormessage={errmessage.Degree}\n          datakey={datakey}\n          value={values.Degree[0]}\n          req\n        />\n        <Inputs\n          hfor=\"Start Date\"\n          kind=\"date\"\n          name=\"From\"\n          invalid={this.handleInvalidate}\n          displayinvalid={valid[\"Start Date\"]}\n          errormessage={errmessage[\"Start Date\"]}\n          datakey={datakey}\n          value={values[\"Start Date\"][0]}\n          req\n        />\n        <Inputs\n          hfor=\"End Date\"\n          kind=\"date\"\n          name=\"To\"\n          invalid={this.handleInvalidate}\n          displayinvalid={valid[\"End Date\"]}\n          errormessage={errmessage[\"End Date\"]}\n          datakey={datakey}\n          min={values[\"Start Date\"][0]}\n          value={values[\"End Date\"][0]}\n        />\n        <button\n          type=\"submit\"\n          className={education.donebutton}\n          datakey={datakey}\n        >\n          Done\n          <i className=\"fas fa-paper-plane\" />\n        </button>\n        {datakey !== 0 ? (\n          <button\n            type=\"button\"\n            className={education.deletebutton}\n            data-key={datakey}\n            onClick={expDelete}\n          >\n            Delete\n            <i className=\"fas fa-trash\" />\n          </button>\n        ) : (\n          <button\n            type=\"button\"\n            className={education.addbutton}\n            onClick={newEducation}\n          >\n            Add\n            <i className=\"fas fa-plus-circle\" />\n          </button>\n        )}\n      </form>\n    );\n  }\n}\n\n/**\n * @type {Object}\n */\nEducation.propTypes = {\n  datakey: PropTypes.number.isRequired,\n  change: PropTypes.func.isRequired,\n  values: PropTypes.shape({\n    \"School Name\": PropTypes.string,\n    Degree: PropTypes.string,\n    \"Start Date\": PropTypes.string,\n    \"End Date\": PropTypes.string,\n  }).isRequired,\n  newEducation: PropTypes.func.isRequired,\n  submit: PropTypes.func.isRequired,\n  expDelete: PropTypes.func.isRequired,\n};\n\nexport default Education;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Inputs from \"./Inputs\";\nimport experience from \"../styles/education.module.css\";\nimport \"@fortawesome/fontawesome-free/js/all\";\n\n/**\n * @module Experience\n */\n\n/**\n * Personal component\n */\nclass Experience extends React.Component {\n  /**\n   * @param {Object} props\n   */\n  constructor(props) {\n    super(props);\n    this.state = {\n      valid: {\n        \"Company Name\": \"null\",\n        Position: \"null\",\n        \"Start Date\": \"null\",\n        \"End Date\": \"null\",\n      },\n      errmessage: {\n        \"School Name\": \"null\",\n        Position: \"null\",\n        \"Start Date\": \"null\",\n        \"End Date\": \"null\",\n      },\n    };\n\n    this.handleInvalidate = this.handleInvalidate.bind(this);\n    this.validator = this.validator.bind(this);\n    this.showError = this.showError.bind(this);\n  }\n\n  /**\n   * Form Validation\n   * @param {Object} e\n   */\n  handleInvalidate(e) {\n    const { change } = this.props;\n    change(e);\n    this.validator(e);\n    const { valid } = this.state;\n    const newObj = { ...valid };\n    if (!e.target.validity.valid) {\n      newObj[e.target.id] = false;\n    } else newObj[e.target.id] = true;\n    this.setState({ valid: newObj });\n  }\n\n  /**\n   * Form Validation\n   * @param {Object} e\n   */\n  validator(event) {\n    const goal = event.target.id;\n    const { valid } = this.state;\n    const newObj = { ...valid };\n    if (event.target.validity.valid) {\n      newObj[goal] = \"Input is valid!\";\n      this.setState({\n        errmessage: newObj,\n      });\n    } else this.showError(event.target, valid, goal);\n  }\n\n  /**\n   * shows errors\n   * @param {Object} input\n   * @param {Object} obj - Invalid state\n   * @param {string} goal - Input id\n   */\n  showError(input, obj, goal) {\n    const inputError = { ...obj };\n    if (input.validity.valueMissing) {\n      inputError[goal] = \"Input must not be left blank!\";\n    } else if (input.validity.typeMismatch) {\n      inputError[goal] = `Entered value must be a valid ${input.type}.`;\n    } else if (input.validity.tooShort) {\n      inputError[\n        goal\n      ] = `Input should be at least ${input.minLength} characters; you entered ${input.value.length}.`;\n    } else if (input.validity.tooLong) {\n      inputError[\n        goal\n      ] = `Input should be at most ${input.maxLength} characters; you entered ${input.value.length}.`;\n    } else if (input.validity.rangeUnderflow) {\n      inputError[\n        goal\n      ] = `Input should be at least ${input.min}; you entered ${input.value}`;\n    } else if (input.validity.rangeOverflow) {\n      inputError[\n        goal\n      ] = `Input should be at most ${input.max}; you entered ${input.value}`;\n    } else if (input.validity.patternMismatch) {\n      inputError[goal] = `Input must be in the form 123-4567-8910`;\n    }\n    this.setState({\n      errmessage: inputError,\n    });\n  }\n\n  render() {\n    const { valid, errmessage } = this.state;\n    const { datakey, values, newExperience, submit, expDelete } = this.props;\n    return (\n      <form className={experience.grid} data-key={datakey} onSubmit={submit}>\n        <Inputs\n          hfor=\"Company Name\"\n          kind=\"text\"\n          name=\"Company Name\"\n          invalid={this.handleInvalidate}\n          displayinvalid={valid[\"Company Name\"]}\n          errormessage={errmessage[\"Company Name\"]}\n          datakey={datakey}\n          value={values[\"Company Name\"][0]}\n          req\n        />\n        <Inputs\n          hfor=\"Position\"\n          kind=\"text\"\n          name=\"Position\"\n          invalid={this.handleInvalidate}\n          displayinvalid={valid.Position}\n          errormessage={errmessage.Position}\n          datakey={datakey}\n          value={values.Position[0]}\n          req\n        />\n        <Inputs\n          hfor=\"Start Date\"\n          kind=\"date\"\n          name=\"From\"\n          invalid={this.handleInvalidate}\n          displayinvalid={valid[\"Start Date\"]}\n          errormessage={errmessage[\"Start Date\"]}\n          datakey={datakey}\n          value={values[\"Start Date\"][0]}\n          req\n        />\n        <Inputs\n          hfor=\"End Date\"\n          kind=\"date\"\n          name=\"To\"\n          invalid={this.handleInvalidate}\n          displayinvalid={valid[\"End Date\"]}\n          errormessage={errmessage[\"End Date\"]}\n          datakey={datakey}\n          min={values[\"Start Date\"][0]}\n          value={values[\"End Date\"][0]}\n        />\n        <button\n          type=\"submit\"\n          className={experience.donebutton}\n          datakey={datakey}\n        >\n          Done\n          <i className=\"fas fa-paper-plane\" />\n        </button>\n        {datakey !== 0 ? (\n          <button\n            type=\"button\"\n            className={experience.deletebutton}\n            data-key={datakey}\n            onClick={expDelete}\n          >\n            Delete\n            <i className=\"fas fa-trash\" />\n          </button>\n        ) : (\n          <button\n            type=\"button\"\n            className={experience.addbutton}\n            onClick={newExperience}\n          >\n            Add\n            <i className=\"fas fa-plus-circle\" />\n          </button>\n        )}\n      </form>\n    );\n  }\n}\n\n/**\n * @type {Object}\n */\nExperience.propTypes = {\n  datakey: PropTypes.number.isRequired,\n  change: PropTypes.func.isRequired,\n  values: PropTypes.shape({\n    \"Company Name\": PropTypes.string,\n    Position: PropTypes.string,\n    \"Start Date\": PropTypes.string,\n    \"End Date\": PropTypes.string,\n  }).isRequired,\n  newExperience: PropTypes.func.isRequired,\n  submit: PropTypes.func.isRequired,\n  expDelete: PropTypes.func.isRequired,\n};\n\nexport default Experience;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"@fortawesome/fontawesome-free/js/all\";\nimport grid from \"../styles/ppreview.module.css\";\n\n/**\n * @module PersonalPreview\n */\n\n/**\n * Personal Preview component\n * @param {Object} param0 - props\n * @param {Object} param0.values -Values to display\n * @param {Function} param0.editMode -Edit function\n * @return {JSX}\n */\nconst PersonalPreview = ({ values, editMode }) => {\n  const display = (info, key) => {\n    if (key === \"photo\") {\n      return (\n        <div key={info[1]} className=\"photoclass\">\n          <img src={info[0]} alt=\"\" width=\"80rem\" height=\"80rem\" />\n        </div>\n      );\n    }\n\n    const capitalize = (w) => {\n      const newWord = w.split(\"\");\n      newWord[0] = newWord[0].toUpperCase();\n      return newWord.join(\"\");\n    };\n\n    return (\n      <div key={info[1]}>\n        <h3>{`${capitalize(key)}`}:</h3>\n        <p>{info[0]}</p>\n      </div>\n    );\n  };\n\n  const keys = Object.keys(values);\n\n  return (\n    <div className={grid.grid}>\n      {keys.map((key) => display(values[key], key))}\n      <button\n        type=\"button\"\n        onClick={editMode}\n        className=\"personalpreviewbutton\"\n      >\n        Edit\n        <i className=\"fas fa-pencil-alt\" />\n      </button>\n    </div>\n  );\n};\n\n/**\n * @type {Object}\n */\nPersonalPreview.propTypes = {\n  values: PropTypes.shape({\n    photo: PropTypes.string,\n    title: PropTypes.string,\n    firstName: PropTypes.string,\n    lastName: PropTypes.string,\n    mail: PropTypes.string,\n    number: PropTypes.string,\n    address: PropTypes.string,\n  }).isRequired,\n  editMode: PropTypes.func.isRequired,\n};\n\nexport default PersonalPreview;\n","export default __webpack_public_path__ + \"static/media/icon.c76f110a.jpg\";","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"@fortawesome/fontawesome-free/js/all\";\nimport education from \"../styles/education.module.css\";\n\n/**\n * @module EduPreview\n */\n\n/**\n * Personal Preview component\n * @param {Object} param0 - props\n * @param {Object} param0.values -Values to display\n * @param {Function} param0.editMode -Edit function\n * @param {NUmber} param0.datakey - Identifies this component\n * @param {Object} param0.deleteMode -Delete function\n * @param {Object} param0.addMode -Add function\n * @return {JSX}\n */\nconst EduPreview = ({ values, editMode, datakey, deleteMode, addMode }) => {\n  const display = (info, key) => {\n    const capitalize = (w) => {\n      const newWord = w.split(\"\");\n      newWord[0] = newWord[0].toUpperCase();\n      return newWord.join(\"\");\n    };\n\n    return (\n      <div key={info[1]}>\n        <h3>{`${capitalize(key)}`}:</h3>\n        <p>{info[0]}</p>\n      </div>\n    );\n  };\n\n  const keys = Object.keys(values);\n\n  return (\n    <div className={education.grid}>\n      {keys.map((key) => display(values[key], key))}\n      <button\n        type=\"button\"\n        onClick={editMode}\n        className=\"EduPreviewbutton\"\n        data-key={datakey}\n      >\n        Edit\n        <i className=\"fas fa-pencil-alt\" />\n      </button>\n      {datakey !== 0 ? (\n        <button\n          type=\"button\"\n          className={education.deletebutton}\n          data-key={datakey}\n          onClick={deleteMode}\n        >\n          Delete\n          <i className=\"fas fa-trash\" />\n        </button>\n      ) : (\n        <button type=\"button\" className={education.addbutton} onClick={addMode}>\n          Add\n          <i className=\"fas fa-plus-circle\" />\n        </button>\n      )}\n    </div>\n  );\n};\n\n/**\n * @type {Object}\n */\nEduPreview.propTypes = {\n  values: PropTypes.shape({\n    \"School Name\": PropTypes.string,\n    Degree: PropTypes.string,\n    \"Start Date\": PropTypes.string,\n    \"End Date\": PropTypes.string,\n  }).isRequired,\n  editMode: PropTypes.func.isRequired,\n  datakey: PropTypes.number.isRequired,\n  deleteMode: PropTypes.func.isRequired,\n  addMode: PropTypes.func.isRequired,\n};\n\nexport default EduPreview;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"@fortawesome/fontawesome-free/js/all\";\nimport experience from \"../styles/education.module.css\";\n\n/**\n * @module ExpPreview\n */\n\n/**\n * Personal Preview component\n * @param {Object} param0 - props\n * @param {Object} param0.values -Values to display\n * @param {Function} param0.editMode -Edit function\n * @param {NUmber} param0.datakey - Identifies this component\n * @param {Object} param0.deleteMode -Delete function\n * @param {Object} param0.addMode -Add function\n * @return {JSX}\n */\nconst ExpPreview = ({ values, editMode, datakey, deleteMode, addMode }) => {\n  const display = (info, key) => {\n    const capitalize = (w) => {\n      const newWord = w.split(\"\");\n      newWord[0] = newWord[0].toUpperCase();\n      return newWord.join(\"\");\n    };\n\n    return (\n      <div key={info[1]}>\n        <h3>{`${capitalize(key)}`}:</h3>\n        <p>{info[0]}</p>\n      </div>\n    );\n  };\n\n  const keys = Object.keys(values);\n\n  return (\n    <div className={experience.grid}>\n      {keys.map((key) => display(values[key], key))}\n      <button\n        type=\"button\"\n        onClick={editMode}\n        className=\"EduPreviewbutton\"\n        data-key={datakey}\n      >\n        Edit\n        <i className=\"fas fa-pencil-alt\" />\n      </button>\n      {datakey !== 0 ? (\n        <button\n          type=\"button\"\n          className={experience.deletebutton}\n          data-key={datakey}\n          onClick={deleteMode}\n        >\n          Delete\n          <i className=\"fas fa-trash\" />\n        </button>\n      ) : (\n        <button\n          type=\"button\"\n          className={experience.addbutton}\n          onClick={addMode}\n        >\n          Add\n          <i className=\"fas fa-plus-circle\" />\n        </button>\n      )}\n    </div>\n  );\n};\n\n/**\n * @type {Object}\n */\nExpPreview.propTypes = {\n  values: PropTypes.shape({\n    \"Company Name\": PropTypes.string,\n    Position: PropTypes.string,\n    \"Start Date\": PropTypes.string,\n    \"End Date\": PropTypes.string,\n  }).isRequired,\n  editMode: PropTypes.func.isRequired,\n  datakey: PropTypes.number.isRequired,\n  deleteMode: PropTypes.func.isRequired,\n  addMode: PropTypes.func.isRequired,\n};\n\nexport default ExpPreview;\n","import React from \"react\";\nimport uniqid from \"uniqid\";\nimport Personal from \"./Personal\";\nimport Education from \"./Education\";\nimport Experience from \"./Experience\";\nimport main from \"../styles/main.module.css\";\nimport PersonalPreview from \"./PersonalPreview\";\nimport Icon from \"../assets/icon.jpg\";\nimport EduPreview from \"./EduPreview\";\nimport ExpPreview from \"./ExpPreview\";\n\n/**\n * @module Main\n */\n\n/**\n * Main component\n */\nclass Main extends React.Component {\n  /**\n   * @param {Object} props\n   */\n  constructor(props) {\n    super(props);\n    this.state = {\n      imgsrc: [Icon, uniqid()],\n      values: {\n        photo: [\"\", uniqid()],\n        title: [\"Default\", uniqid()],\n        firstName: [\"\", uniqid()],\n        lastName: [\"\", uniqid()],\n        number: [\"\", uniqid()],\n        mail: [\"\", uniqid()],\n        address: [\"\", uniqid()],\n      },\n      personalPreview: false,\n      eduValues: [\n        {\n          type: \"education\",\n          values: {\n            \"School Name\": [\"\", uniqid()],\n            Degree: [\"\", uniqid()],\n            \"Start Date\": [\"\", uniqid()],\n            \"End Date\": [\"\", uniqid()],\n          },\n          key: uniqid(),\n        },\n      ],\n      expValues: [\n        {\n          type: \"experience\",\n          values: {\n            \"Company Name\": [\"\", uniqid()],\n            Position: [\"\", uniqid()],\n            \"Start Date\": [\"\", uniqid()],\n            \"End Date\": [\"\", uniqid()],\n          },\n          key: uniqid(),\n        },\n      ],\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleImg = this.handleImg.bind(this);\n    this.edit = this.edit.bind(this);\n    this.eduDisplay = this.eduDisplay.bind(this);\n    this.eduChange = this.eduChange.bind(this);\n    this.addEdu = this.addEdu.bind(this);\n    this.eduSubmit = this.eduSubmit.bind(this);\n    this.eduDelete = this.eduDelete.bind(this);\n    this.eduEdit = this.eduEdit.bind(this);\n    this.expDisplay = this.expDisplay.bind(this);\n    this.expChange = this.expChange.bind(this);\n    this.addExp = this.addExp.bind(this);\n    this.expSubmit = this.expSubmit.bind(this);\n    this.expDelete = this.expDelete.bind(this);\n    this.expEdit = this.expEdit.bind(this);\n  }\n\n  /**\n   * Updates image scr\n   * @param {Object} e\n   */\n  handleImg(e) {\n    const { imgsrc } = this.state;\n    this.setState({\n      imgsrc: [URL.createObjectURL(e.target.files[0]), imgsrc[1]],\n    });\n  }\n\n  /**\n   * Updates state on Personal component change\n   * @param {Object} e\n   */\n  handleChange(e) {\n    const { values } = this.state;\n    const newObj = { ...values };\n    const keys = Object.keys(newObj);\n    for (let i = 0; i < keys.length; i += 1) {\n      if (e.target.id === keys[i]) {\n        newObj[keys[i]] = [e.target.value, newObj[keys[i]][1]];\n      }\n    }\n    this.setState({\n      values: newObj,\n    });\n  }\n\n  /**\n   * Updates state on Personal component submit\n   * @param {Object} e\n   */\n  handleSubmit(e) {\n    const { values, imgsrc } = this.state;\n    e.preventDefault();\n    this.setState({\n      personalPreview: true,\n      values: {\n        photo: imgsrc,\n        title: values.title,\n        firstName: values.firstName,\n        lastName: values.lastName,\n        number: values.number,\n        mail: values.mail,\n        address: values.address,\n      },\n    });\n  }\n\n  /**\n   * Changes Personal component to preview mode\n   * @function\n   */\n  edit() {\n    const { values } = this.state;\n    this.setState({\n      personalPreview: false,\n      values: {\n        photo: [\"\", uniqid()],\n        title: values.title,\n        firstName: values.firstName,\n        lastName: values.lastName,\n        number: values.number,\n        mail: values.mail,\n        address: values.address,\n      },\n    });\n  }\n\n  /**\n   * Diplays Education or Education preview component.\n   * @param {Object} obj - Education value state\n   * @param {Number} index\n   * @return {JSX}\n   */\n  eduDisplay(obj, index) {\n    const { eduValues } = this.state;\n    if (obj.type === \"education\") {\n      return (\n        <Education\n          key={obj.key}\n          change={this.eduChange}\n          datakey={index}\n          values={eduValues[index].values}\n          newEducation={this.addEdu}\n          submit={this.eduSubmit}\n          eduDelete={this.eduDelete}\n        />\n      );\n    }\n    return (\n      <EduPreview\n        key={obj.key}\n        values={eduValues[index].values}\n        editMode={this.eduEdit}\n        datakey={index}\n        deleteMode={this.eduDelete}\n        addMode={this.addEdu}\n      />\n    );\n  }\n\n  /**\n   * Updates state on Education component change\n   * @param {Object} e\n   */\n  eduChange(e) {\n    const { eduValues } = this.state;\n    const newarr = [...eduValues];\n    const id = parseInt(e.target.getAttribute(\"data-key\"), 10);\n    const obj = newarr[id].values;\n    const keys = Object.keys(obj);\n    for (let i = 0; i < keys.length; i += 1) {\n      if (e.target.id === keys[i]) {\n        obj[keys[i]][0] = e.target.value;\n      }\n    }\n    this.setState({\n      eduValues: newarr,\n    });\n  }\n\n  /**\n   * Adds another Education component\n   * @function\n   */\n  addEdu() {\n    const { eduValues } = this.state;\n    const newarr = [...eduValues];\n    newarr.push({\n      type: \"education\",\n      values: {\n        \"School Name\": [\"\", uniqid()],\n        Degree: [\"\", uniqid()],\n        \"Start Date\": [\"\", uniqid()],\n        \"End Date\": [\"\", uniqid()],\n      },\n      key: uniqid(),\n    });\n    this.setState({\n      eduValues: newarr,\n    });\n  }\n\n  /**\n   * Updates state on Education component submit\n   * @param {Object} e\n   */\n  eduSubmit(e) {\n    e.preventDefault();\n    const { eduValues } = this.state;\n    const newarr = [...eduValues];\n    const id = parseInt(e.target.getAttribute(\"data-key\"), 10);\n    newarr[id].type = \"preview\";\n    this.setState({\n      eduValues: newarr,\n    });\n  }\n\n  /**\n   * Deletes education component\n   * @param {Object} e\n   */\n  eduDelete(e) {\n    const { eduValues } = this.state;\n    const newarr = [...eduValues];\n    const id = parseInt(e.target.getAttribute(\"data-key\"), 10);\n    newarr.splice(id, 1);\n    this.setState({\n      eduValues: newarr,\n    });\n  }\n\n  /**\n   * Edits education component\n   * @param {Objects} e\n   */\n  eduEdit(e) {\n    const { eduValues } = this.state;\n    const newarr = [...eduValues];\n    const id = parseInt(e.target.getAttribute(\"data-key\"), 10);\n    newarr[id].type = \"education\";\n    this.setState({\n      eduValues: newarr,\n    });\n  }\n\n  /**\n   * Diplays Experience or Experience preview component.\n   * @param {Object} obj - Education value state\n   * @param {Number} index\n   * @return {JSX}\n   */\n  expDisplay(obj, index) {\n    const { expValues } = this.state;\n    if (obj.type === \"experience\") {\n      return (\n        <Experience\n          key={obj.key}\n          change={this.expChange}\n          datakey={index}\n          values={expValues[index].values}\n          newExperience={this.addExp}\n          submit={this.expSubmit}\n          expDelete={this.expDelete}\n        />\n      );\n    }\n    return (\n      <ExpPreview\n        key={obj.key}\n        values={expValues[index].values}\n        editMode={this.expEdit}\n        datakey={index}\n        deleteMode={this.expDelete}\n        addMode={this.addExp}\n      />\n    );\n  }\n\n  /**\n   * Updates state on Experience component change\n   * @param {Object} e\n   */\n  expChange(e) {\n    const { expValues } = this.state;\n    const newarr = [...expValues];\n    const id = parseInt(e.target.getAttribute(\"data-key\"), 10);\n    const obj = newarr[id].values;\n    const keys = Object.keys(obj);\n    for (let i = 0; i < keys.length; i += 1) {\n      if (e.target.id === keys[i]) {\n        obj[keys[i]][0] = e.target.value;\n      }\n    }\n    this.setState({\n      expValues: newarr,\n    });\n  }\n\n  /**\n   * Adds another Experience component\n   * @function\n   */\n  addExp() {\n    const { expValues } = this.state;\n    const newarr = [...expValues];\n    newarr.push({\n      type: \"experience\",\n      values: {\n        \"Company Name\": [\"\", uniqid()],\n        Position: [\"\", uniqid()],\n        \"Start Date\": [\"\", uniqid()],\n        \"End Date\": [\"\", uniqid()],\n      },\n      key: uniqid(),\n    });\n    this.setState({\n      expValues: newarr,\n    });\n  }\n\n  /**\n   * Updates state on Experience component submit\n   * @param {Object} e\n   */\n  expSubmit(e) {\n    e.preventDefault();\n    const { expValues } = this.state;\n    const newarr = [...expValues];\n    const id = parseInt(e.target.getAttribute(\"data-key\"), 10);\n    newarr[id].type = \"preview\";\n    this.setState({\n      expValues: newarr,\n    });\n  }\n\n  /**\n   * Deletes experience component\n   * @param {Object} e\n   */\n  expDelete(e) {\n    const { expValues } = this.state;\n    const newarr = [...expValues];\n    const id = parseInt(e.target.getAttribute(\"data-key\"), 10);\n    newarr.splice(id, 1);\n    this.setState({\n      expValues: newarr,\n    });\n  }\n\n  /**\n   * Edits experience component\n   * @param {Objects} e\n   */\n  expEdit(e) {\n    const { expValues } = this.state;\n    const newarr = [...expValues];\n    const id = parseInt(e.target.getAttribute(\"data-key\"), 10);\n    newarr[id].type = \"experience\";\n    this.setState({\n      expValues: newarr,\n    });\n  }\n\n  render() {\n    const { values, personalPreview, imgsrc, eduValues, expValues } =\n      this.state;\n    return (\n      <main className={main.mainstyle}>\n        <div>\n          {!personalPreview ? (\n            <Personal\n              change={this.handleChange}\n              values={values}\n              handleImg={this.handleImg}\n              imgsrc={imgsrc}\n              submit={this.handleSubmit}\n            />\n          ) : (\n            <PersonalPreview values={values} editMode={this.edit} />\n          )}\n          {eduValues.map((obj, index) => this.eduDisplay(obj, index))}\n          {expValues.map((obj, index) => this.expDisplay(obj, index))}\n        </div>\n      </main>\n    );\n  }\n}\n\nexport default Main;\n","import React from \"react\";\nimport footerStyle from \"../styles/Footer.module.css\";\nimport \"@fortawesome/fontawesome-free/js/all\";\n\n/**\n * @module Footer\n */\n\n/**\n * Footer component\n * @return {JSX}\n */\nconst Footer = () => (\n  <footer className={footerStyle.footer}>\n    Created by Frostwalker\n    <a\n      href=\"https://github.com/Mynameisfrostwalker/Cv-appllication\"\n      target=\"_blank\"\n      rel=\"noreferrer\"\n    >\n      <i className=\"fab fa-github\" />\n    </a>\n  </footer>\n);\n\nexport default Footer;\n","import React from \"react\";\nimport Header from \"./components/Header\";\nimport Main from \"./components/Main\";\nimport Footer from \"./components/Footer\";\nimport app from \"./styles/app.module.css\";\n\n/**\n * @module App\n */\n\n/**\n * App component\n * @return {JSX}\n */\nconst App = () => (\n  <div id=\"container\">\n    <Header />\n    <div className={app.form}>\n      <Main />\n    </div>\n    <Footer />\n  </div>\n);\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./styles/reset.css\";\nimport \"./styles/index.css\";\nimport App from \"./App\";\n\n/**\n * @fileoverview Index.js is the root file of this project\n * @author Frostwalker\n */\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}